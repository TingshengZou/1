CurrentFolder = pwd;
addpath([CurrentFolder '/Utils'])

T = 2000;

% N = 256;NE = 128;NI= 128;
N = 600;NE = 300;NI= 300;


lambda = 0.65;

% I_0 = lambda*f*tau;
fs = [0.07*ones(NE,1);0.06*ones(NI,1)];
%NeighborScale = 10; % 60 30 10 5
%Neighbor 5  10 30 60
N_econn = 100;
S_SWconn = zeros(NE);
for postInd = 1:NE
    for preInd = 1:NE
        if mod(postInd-preInd,NE)<=N_econn/2 || mod(postInd-preInd,NE)>= NE-N_econn/2
            S_SWconn(postInd,preInd) = 1;
        end
    end
end

S_E = repmat(S_SWconn,2,1);

N_iconn = 50;
S_Iconn = zeros(NE);
for postInd = 1:NE
    for preInd = 1:NE
        if mod(postInd-preInd,NE)<=N_iconn/2 || mod(postInd-preInd,NE)>= NE-N_iconn/2
            S_Iconn(postInd,preInd) = 1;
        end
    end
end

S_I = repmat(S_Iconn,2,1);


S = [S_E,S_I];

for jj = 1:N
    S(jj,jj)=0;
end

see = 0.016;
sei = 0.013; 
sie = 0.018;
sii = 0.01;
dt = 0.05;
Nevent = floor(T*lambda*2);
eventsN = zeros(N,Nevent);
for ii = 1:N
    event = Poisson_Process_2(lambda,T);
    eventsN(ii,1:length(event))=event;
end


WinSize  = 40;
WinSlide = 20;
%convcurve = [];
tic
    V_0s = rand(N,1);
    [Vs,spike,t,SpikeCount,~,~] = ...
        MC_Vseries_for_network_ninput_I_based_norms_Syn(dt,T,V_0s,eventsN,fs,S, ...
                                                        see,sei,sie,sii,NE,NI,...
                                                        WinSize, WinSlide);
    [A,~,Times] = find(eventsN);
  R = sparse(A,floor(Times/dt)+1,ones(size(A)),N,length(t));
  Kick = full(R);
    %spiketime = (Sp_t-1)*dt;
        figure
        [Neukick,Tkick] = find(Kick==1);
        [NeuInds,TInd] = find(spike==1);
        Kick_positions = [Neukick, Tkick];
        Spike_positions = [NeuInds, TInd];

        [kicked] = intersect(Kick_positions, Spike_positions, 'rows');
        Neukicked = kicked(:, 1);
        Tkicked = kicked(:, 2);

        hold on
        %scatter(TInd(NeuInds<=NE)*dt,NeuInds(NeuInds<=NE), 'r.')
        %scatter(TInd(NeuInds>NE)*dt, NeuInds(NeuInds>NE),  'b.')
        TIndin = TInd * dt >= 1000 & TInd * dt <= 2000;
        Tkickin = Tkicked * dt >= 1000 & Tkicked * dt <= 2000;
        NeuIndsin = NeuInds(TIndin);
        TIndin = TInd(TIndin);
        Neukickin = Neukicked(Tkickin);
        Tkickin = Tkicked(Tkickin);
       

        NeuIndsE = NeuIndsin(NeuIndsin <= NE);
        TIndE = TIndin(NeuIndsin <= NE);

        NeuIndsI = NeuIndsin(NeuIndsin > NE);
        TIndI = TIndin(NeuIndsin > NE);

        scatter(TIndE * dt, NeuIndsE, 'r.')
        scatter(TIndI * dt, NeuIndsI, 'b.')
        scatter(Tkickin*dt, Neukickin, 'black')
hold off;
       
    %convcurve = [convcurve;abs(mean(rate_ns(:,1:6))-mean(rate_ns(:,7)))/N];
toc

